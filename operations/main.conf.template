# This is the default nginx configuration for the front-most web server,
# typically running on port 80. It is mainly responsible for proxying to
# the Varnish cache.
#
# Note that main.conf is generated from main.conf.template.
#
# Copyright 2009 California Institute of Technology. ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged

# Process control
user ${users:main};
pid ${buildout:directory}/var/main.pid;
lock_file ${buildout:directory}/var/main.lock;
worker_processes 1;
daemon off;
events {
    worker_connections 1024;
}

# Logging
error_log ${buildout:directory}/var/log/main-error.log warn;

# NGINX web server
http {
    # Varnish upstream; caches expensive page composition from Zope/Plone
    upstream cache {
        server ${hosts:cache}:${ports:cache};
    }

    # Direct connection to a Zope instance; used for TLS/SSL connections (logged in users)
    upstream zope {
        server ${hosts:instance1}:${ports:instance1};
    }
    
    # HTTP unencrypted: client → nginx → varnish → haproxy → instance1,2
    server {
        listen *:${ports:main};
        server_name ${hosts:main};
        access_log ${buildout:directory}/var/log/main-plone-access.log;

        # Already logged in? Sorry pal, you go to https.
        if ($http_cookie ~ "__ac=") {
            rewrite ^(.*)$ https://${hosts:main}:${ports:ssl}$1 permanent;
        }

        # Logging in? You need https.
        if ($query_string ~ "came_from=http(.*)") {
            set $cameFrom $1;
            rewrite ^/(.*)(require_login|login_form)$ https://${hosts:main}:${ports:ssl}/$1$2?came_from=https$cameFrom? permanent;
        }
        rewrite ^/login_(.*) https://${hosts:main}:${ports:ssl}/login_$1 permanent;

        # Show status information on /_main-status
        location = /_main_status_ {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }   
        
        # Proxy everything to Varnish
        location / {
            rewrite ^/(.*)$ /VirtualHostBase/http/${hosts:main}:${ports:main}/${plone-sites:main}/VirtualHostRoot/$1 break;
            proxy_pass http://cache;
            proxy_connect_timeout 75;
            proxy_read_timeout 185;
        }
    }
    
    # HTTPS encrypted: client → nginx → instance1
    server {
        listen *:${ports:ssl};
        server_name ${hosts:main};
        access_log ${buildout:directory}/var/log/main-ssl-plone-access.log;
        ssl on;
        ssl_certificate ${buildout:directory}/etc/server.crt;
        ssl_certificate_key ${buildout:directory}/etc/server.key;

        # Logging out? No need for https.
        rewrite ^/(.*)logged_out http://${hosts:main}:${ports:main}/$1logged_out permanent;

        # Bypass Varnish when using SSL
        location / {
            rewrite ^/(.*)$ /VirtualHostBase/https/${hosts:main}:${ports:ssl}/${plone-sites:main}/VirtualHostRoot/$1 break;
            proxy_pass http://zope;
            proxy_connect_timeout 75;
            proxy_read_timeout 185;
        }
    }
}
